// Amusing Digits.cpp : 定义控制台应用程序的入口点。
//
//网易游戏笔试题http://blog.csdn.net/shawjan/article/details/48682725
//小Z一直是网易的粉丝，从网易97年6月成立开始他就一直关注着它的发展，并且玩过几乎所有的网易游戏。同时他也是一名数学爱好者，经常沉迷于研究一些游戏数值的特点。他觉得这些数字的设计和网易本身或许有千丝万缕的关系。
//
//有一天，他在游戏中获得了一串数字，直觉告诉他这不是一串普通的数字串，或许可以破解一些关于网易的秘密。破解的第一步，他很想知道，在这串数字中，最多可以挑出多少个’9706’串。挑选的规则为：
//
//（1）挑出的数字’9’, ’7’, ’0’, ’6’在原串中可以不连续，但是数字的先后顺序不能改变
//
//（2）使用过的数字不能被再次使用
//
//如’123901370997606’可以最多挑出2个’9706’，而’6079’则无法挑出任何一个’9706’。
//
//输入
//第一行是整数T(T <= 100)，表示下面有T组数据。
//
//之后T行，每行为一组数据，每组数据为一个字符串。每个字符串的长度L <= 50000。每个字符串只会包含数字[‘0’…’9’]。
//
//输出
//输出T行，每行对应一个数据的输出结果，表示字符串最多能挑出多少个’9706’。
//
//样例输入
//4
//6097
//97069706
//997776600069
//123901370997606
//样例输出
//0
//2
//1
//2

#include "stdafx.h"

#include <iostream>
#include <string>

using namespace std;

int main()
{
	int n = 0;
	string s;
	cin >> n;

	while (n>0)
	{
		cin >> s;
		int n9 = 0, n7 = 0, n0 = 0, n6 = 0;
		for (int i = 0; i < s.size(); i++)
		{
			if (s[i] == '9')
			{
				n9++;
			}
			else if (s[i] == '7' && n7 < n9)
			{
				n7++;
			}
			else if (s[i] == '0' && n0 < n7)
			{
				n0++;
			}
			else if (s[i] == '6' && n6 < n0)
			{
				n6++;
			}
		}

		cout << n6 << endl;

		n--;
	}

	system("pause");

	return 0;
}

